N[ext]          [count] [++opt] [+cmd]
P[rint]         [count] [flags]
a[ppend]
ab[breviate]
abc[lear]
abo[veleft]     {cmd}
al[l]           [N]
am[enu]
an[oremenu]     {menu}
ar[gs]
arga[dd]        {name} ..
argd[elete]     {pattern} ..
arge[dit]       [++opt] [+cmd] {name}
argdo           {cmd}
argg[lobal]     [++opt] [+cmd] {arglist}
argl[ocal]      [++opt] [+cmd] {arglist}
argu[ment]      [count] [++opt] [+cmd]
as[cii]
au[tocmd]       [group] {event} {pat} [nested] {cmd}
aug[roup]       {name}
aun[menu]       {menu}
b[uffer]        {bufname}
bN[ext]         [N]
ba[ll]          [N]
bad[d]          [+lnum] {fname}
bd[elete]       {bufname}
be[have]        {model}
bel[owright]    {cmd}
bf[irst]
bl[ast]
bm[odified]     [N]
bn[ext]         [N]
bo[tright]      {cmd}
bp[revious]     [N]
br[ewind]
brea[k]
breaka[dd]      func [lnum] {name}
breakd[el]      {nr}
breakl[ist]
bro[wse]        {command}
bufdo[]         {cmd}
buffers[]
bun[load]       {bufname}
bw[ipeout]      {bufname}
c[hange]
cN[ext]
cNf[ile]
ca[bbrev]       [<expr>] [lhs] [rhs]
cabc[lear]
caddb[uffer]    [bufnr]
cad[dexpr]      {expr}
caddf[ile]      [errorfile]
cal[l]          {name}([arguments])
cat[ch]         /{pattern}/
cb[uffer][]     [bufnr]
cc              [nr]
ccl[ose]
cd[]            {path}
ce[nter]        [width]
cex[pr]         {expr}
cf[ile]         [errorfile]
cfir[st]        [nr]
cgetb[uffer]    [bufnr]
cgete[xpr]      {expr}
cg[etfile]      [errorfile]
changes
chd[ir]         [path]
che[ckpath]
checkt[ime]
cl[ist]         [from] [, [to]]
cla[st]         [nr]
clo[se]
cm[ap]          {lhs} {rhs}
cmapc[lear]
cme[nu]         {menu}
cn[ext]
cnew[er]        [count]
cnf[ile]
cno[remap]      {lhs} {rhs}
cnorea[bbrev]   [<expr>] [lhs] [rhs]
cnoreme[nu]     {menu}
co[py]          {address}
col[der]        [count]
colo[rscheme]   {name}
com[mand]       [{attr}...] {cmd} {rep}
comc[lear]
comp[iler]      {name}
con[tinue]
conf[irm]       {command}
cope[n]         [height]
cp[revious]
cpf[ile]
cq[uit]
cr[ewind]       [nr]
cs[cope]
cst[ag]
cu[nmap]        {lhs}
cuna[bbrev]     {lhs}
cunme[nu]       {menu}
cw[indow]       [height]
d[elete]        [x]
delm[arks]      {marks}
deb[ug]         {cmd}
debugg[reedy]
del[command]    {cmd}
delf[unction]   {name}
diffu[pdate]
diffg[et]       [bufspec]
diffo[ff]
diffp[atch]     {patchfile}
diffpu[t]       [bufspec]
diffs[plit]     {filename}
diffthis
dig[raphs]      {char1}{char2} {number} ...
di[splay]       [arg]
dj[ump]         [count] [/]string[/]
dl[ist]         [/]string[/]
do[autocmd]     [group] {event} [fname]
doautoa[ll]     [group] {event} [fname]
dr[op]          [++opt] [+cmd] {file} ..
ds[earch]       [count] [/]string[/]
dsp[lit]        [count] [/]string[/]
e[dit]          [++opt] [+cmd] {file}
ea[rlier]       {count} | {N}s | {N}h
ec[ho]          {expr1} ..
echoe[rr]       {expr1} ..
echoh[l]        {expr1} ..
echom[sg]       {expr1} ..
echon           {expr1} ..
el[se]
elsei[f]        {expr1}
em[enu]         {menu}
en[dif]
endfo[r]
endf[unction]
endt[ry]
endw[hile]
ene[w]
ex              [++opt] [+cmd] [file]
exe[cute]       {expr1} ..
exi[t]          [++opt] [file]
exu[sage]
f[ile]
files[]
filet[ype]
fin[d]          [++opt] [+cmd] {file}
fina[lly]
fini[sh]
fir[st]         [++opt] [+cmd]
fix[del]
fo[ld]
foldc[lose]
foldd[oopen]    {cmd}
folddoc[losed]  {cmd}
foldo[pen]
for             {var} in {list}
fu[nction]      {name}([arguments]) [range] [abort] [dict]
go[to]          [count]
gr[ep]          [arguments]
grepa[dd]       [arguments]
gu[i]           [++opt] [+cmd] [-f|-b] [files...]
gv[im]          [++opt] [+cmd] [-f|-b] [files...]
ha[rdcopy]      [arguments]
h[elp]          {subject}
helpf[ind]
helpg[rep]      {pattern}[@xx]
helpt[ags]      [++t] {dir}
hi[ghlight]     [default] {group-name} {key}={arg} ..
hid[e]          {cmd}
his[tory]       [{name}] [{first}][, [{last}]]
i[nsert]
ia[bbrev]       [<expr>] [lhs] [rhs]
iabc[lear]
if              {expr1}
ij[ump][]       [count] [/]pattern[/]
ilist
imap
imapclear
imenu           {menu}
inoremap
inoreabbrev
inoremenu       {menu}
intro
isearch
isplit
iunmap
iunabbrev
iunmenu         {menu}
join
jumps
k
keepalt
keepmarks
keepjumps
lNext
lNfile
list
laddexpr
laddbuffer
laddfile
last
language
later
lbuffer
lcd
lchdir
lclose
lcscope
left
leftabove
let
lexpr
lfile
lfirst
lgetbuffer
lgetexpr
lgetfile
lgrep
lgrepadd
lhelpgrep
ll
llast
llist
lmake
lmap
lmapclear
lnext
lnewer
lnfile
lnoremap
loadkeymap
loadview
lockmarks
lockvar
lolder
lopen
lprevious
lpfile
lrewind
ls
ltag
lunmap
lvimgrep
lvimgrepadd
lwindow
move
mark
make
map
mapclear
marks
match
menu            {menu}
menutranslate
messages
mkexrc
mksession
mkspell
mkvimrc
mkview
mode
mzscheme
mzfile
nbkey
next
new
nmap
nmapclear
nmenu           {menu}
nnoremap
nnoremenu       {menu}
noautocmd
noremap
nohlsearch
noreabbrev
noremenu        {menu}
normal
number
nunmap
nunmenu         {menu}
oldfiles
open
omap
omapclear
omenu           {menu}
only
onoremap
onoremenu       {menu}
options
ounmap
ounmenu         {menu}
pclose
pedit
perl
print
profdel
profile
promptfind
promptrepl
perldo
pop
popup
ppop
preserve
previous
psearch
ptag
ptNext
ptfirst
ptjump
ptlast
ptnext
ptprevious
ptrewind
ptselect
put
pwd
python
pyfile
q[uit]
quitall
qall
read
recover
redo
redir
redraw
redrawstatus
registers
resize
retab
return
rewind
right
rightbelow
ruby
rubydo
rubyfile
runtime
rviminfo
substitute
sNext
sandbox
sargument
sall
saveas
sbuffer
sbNext
sball
sbfirst
sblast
sbmodified
sbnext
sbprevious
sbrewind
scriptnames
scriptencoding
scscope
set
setfiletype
setglobal
setlocal
sfind
sfirst
shell
simalt
sign
silent
sleep
slast
smagic
smap
smapclear
smenu           {menu}
snext
sniff
snomagic
snoremap
snoremenu       {menu}
sort
source
spelldump
spellgood
spellinfo
spellrepall
spellundo
spellwrong
split
sprevious
srewind
stop
stag
startinsert
startgreplace
startreplace
stopinsert
stjump
stselect
sunhide
sunmap
sunmenu         {menu}
suspend
sview
swapname
syntax
syncbind
t
tNext
tabNext
tabclose
tabdo
tabedit
tabfind
tabfirst
tablast
tabmove
tabnew
tabnext
tabonly
tabprevious
tabrewind
tabs
tab
tag
tags
tcl
tcldo
tclfile
tearoff
tfirst
throw
tjump
tlast
tmenu           {menu}
tnext
topleft
tprevious
trewind
try
tselect
tunmenu         {menu}
undo
undojoin
undolist
unabbreviate
unhide
unlet
unlockvar
unmap
unmenu          {menu}
unsilent
update
vglobal
ve[rsion]
verb[ose]       {command}
vertical
vim[grep]       /{pattern}/[g][j] {file} ...
vimgrepadd
visual
viusage
view
vmap
vmapclear
vmenu           {menu}
vnew
vnoremap
vnoremenu       {menu}
vsplit
vunmap
vunmenu         {menu}
windo
write
wNext
wall
while
winsize
wincmd
winpos
wnext
wprevious
wq
wqall
wsverb
wviminfo
xit
xall
xmapclear
xmap
xmenu           {menu}
xnoremap
xnoremenu       {menu}
xunmap
xunmenu         {menu}
yank
